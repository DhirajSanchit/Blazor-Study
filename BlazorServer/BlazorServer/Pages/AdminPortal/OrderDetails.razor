@page "/orderdetail/{id:int}"
@using LogicLayer.Functionalities.Orders
@inject NavigationManager NavigationManager;
@inject IViewOrderDetails ViewOrderDetails;
@inject IProcessOrder ProcessOrder

@* @attribute [Authorize] *@
 
<h3>OrderDetails</h3>
<br/>
@if (order != null)
{
    <p>
        <b>Customer Info:</b>
    </p>
    
    <p>@order.CustomerName</p>
    <p>@order.CustomerAddress</p>
    <p>@order.CustomerCity</p>
    <p>@order.CustomerProvince</p>
    <p>@order.CustomerCountry</p>
    <br/>
    <br/>

    <table>
        <thead>
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
        </tr>
        </thead>
        <tbody>
        
        </tbody>
    </table>

}

@code {
    private Order order;

    [Parameter]
    public int Id { get; set; }
    
    private AuthenticationState authenticationstate { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationstateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        authenticationstate = await AuthenticationstateTask;
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Id > 0)
        {
            order = ViewOrderDetails.Execute(Id);
        }
    }

    private void HandleProcessOrder()
    {
        if (order != null && authenticationstate != null)
        {
            ProcessOrder.Execute(order.OrderId.Value, authenticationstate.User.Identity.Name);
            NavigationManager.NavigateTo("/outstandingorders");
        }
    }

}
