@using LogicLayer.Functionalities.ShoppingCart
@inject NavigationManager _navigationManager
@inject IViewShoppingCart ShoppingCart
@inject IPlaceOrder _placeOrder;
@page "/placeorder"

<h3>PlaceOrderComponent</h3>

<br/>
 
    <div class="row">
        <div class="col">
                <CustomerFormComponent OnCustomerInfoSubmitted="HandleCustomerInfoSubmitted"></CustomerFormComponent>
            </div>
            <div class="col">
                <OrderSummaryComponent Order="order" HidePlaceOrder="true"></OrderSummaryComponent>
            </div>
    </div>
 

@code {
    
    private Order order = new();
    
    private MessageComponent msgComponent;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            order = await ShoppingCart.Execute();
            StateHasChanged();
    }
    
    private async void HandleCustomerInfoSubmitted(CustomerViewModel customer)
    {
        var mapper = new AutoMapper.MapperConfiguration(cfg => cfg.CreateMap<CustomerViewModel, Order>()).CreateMapper();
        mapper.Map<CustomerViewModel, Order>(customer, order);

        var orderUniqueId = await _placeOrder.Execute(order);
        if (string.IsNullOrWhiteSpace(orderUniqueId))
        {
    // error occured, not able to place order, please contact the admin
            msgComponent.ShowError("Information in the order is invalid, please double check.");
        }
        else
        {
            _navigationManager.NavigateTo($"/orderconfirm/{orderUniqueId}");
        }
    }

}